buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.novoda:bintray-release:0.9.2'
    }
}

apply plugin: 'com.android.library'
//apply plugin: 'maven'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion Integer.parseInt(SDK_COMPILE)
    buildToolsVersion SDK_BUILD

    //useLibrary('org.apache.http.legacy')
    defaultConfig {
        minSdkVersion Integer.parseInt(SDK_MIN)
        targetSdkVersion Integer.parseInt(SDK_TARGET)
        versionCode 1
        versionName "1.0"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

ext {
    pure = project.hasProperty('pure') ? project.property('pure') : false
    artifactId = pure ? "af-pay-pure" : 'af-pay'
    groupId = 'cn.ieclipse.af'
}

dependencies {
    if (pure) {
        provided fileTree(include: ['*.jar'], dir: 'libs')
        provided 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.1.6'
        provided 'cn.ieclipse.aar-ref:alipaySdk:15.5.9@aar'
    } else {
        compile fileTree(include: ['*.jar'], dir: 'libs')
        compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.1.6'
        compile 'cn.ieclipse.aar-ref:alipaySdk:15.5.9@aar'
        provided project(":unionpay")
    }
}

tasks.withType(org.gradle.api.tasks.javadoc.Javadoc) {
    options {
        links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        encoding 'utf-8'
        charSet 'utf-8'
        tags 'date:t:Date:'
        tags 'sample:t:Sample:'
        tags 'attr:a:Attribute:'
        exclude '**/*'
    }
}

// ./gradlew clean library:build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false
publish {
    userOrg = 'jamling'
    groupId = 'cn.ieclipse.af'
    artifactId = pure ? "af-pay-pure" : 'af-pay'
    publishVersion = '0.2.0'
    desc = 'An Android pay sdk'
    website = 'https://github.com/Jamling/af-pay'
    bintrayUser = 'jamling'
    bintrayKey = '832bbe2d2e86f4644c948dc82aa69cc4fa30c16f'
    dryRun = true
}
task hello() {
    println(pure)
}